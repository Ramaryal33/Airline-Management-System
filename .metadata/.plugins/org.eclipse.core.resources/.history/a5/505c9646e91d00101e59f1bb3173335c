package com.airline.controller;

import com.airline.model.User;
import com.airline.service.UserService;
import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.annotation.*;

import java.io.IOException;

@WebServlet("/login")
public class LoginController extends HttpServlet {
    private static final long serialVersionUID = 1L;
    private final UserService userService = new UserService();

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        // If already logged in, redirect to dashboard
        HttpSession session = request.getSession(false);
        if (session != null && session.getAttribute("user") != null) {
            redirectToDashboard((User) session.getAttribute("user"), response);
            return;
        }

        // Prepare resources for login page
        String contextPath = request.getContextPath();
        request.setAttribute("cssPath", contextPath + "/css/userlogin.css");
        request.setAttribute("imagepath", contextPath + "/image/login.jpg");

        // Show login page
        request.getRequestDispatcher("/WEB-INF/page/login.jsp").forward(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String email = request.getParameter("email").trim().toLowerCase();
        String password = request.getParameter("password");

        try {
            // Authenticate without userType
            User user = userService.authenticateByEmailOnly(email, password);

            if (user != null) {
                HttpSession session = request.getSession();
                session.setAttribute("user", user);

                // Remember me option
                if ("on".equals(request.getParameter("remember"))) {
                    Cookie cookie = new Cookie("rememberedEmail", email);
                    cookie.setMaxAge(30 * 24 * 60 * 60); // 30 days
                    cookie.setHttpOnly(true);
                    cookie.setPath(request.getContextPath());
                    response.addCookie(cookie);
                }

                redirectToDashboard(user, response);

            } else {
                request.setAttribute("error", "Invalid email or password.");
                forwardToLoginWithCss(request, response);
            }

        } catch (Exception e) {
            request.setAttribute("error", "Login error. Try again.");
            forwardToLoginWithCss(request, response);
        }
    }

    private void redirectToDashboard(User user, HttpServletResponse response) throws IOException {
        String dashboardPath = switch (user.getUserType().toLowerCase()) {
            case "admin" -> "adminDashboard";
            case "staff" -> "staffDashboard";
            default -> "passengerDashboard";
        };
        response.sendRedirect(dashboardPath);
    }

    private void forwardToLoginWithCss(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String contextPath = request.getContextPath();
        request.setAttribute("cssPath", contextPath + "/css/userlogin.css");
        request.setAttribute("imagepath", contextPath + "/image/login.jpg");
        request.getRequestDispatcher("/WEB-INF/page/login.jsp").forward(request, response);
    }
}
