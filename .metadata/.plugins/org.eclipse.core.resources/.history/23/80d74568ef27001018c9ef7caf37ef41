package com.airline.controller;

import com.airline.config.DbConfig;
import com.airline.model.User;
import com.airline.staff.service.EmployeeService;
import com.airline.service.UserService;
import com.airline.staff.model.Employee;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.annotation.*;

import java.io.IOException;
import java.sql.SQLException;

@WebServlet("/login")
public class LoginController extends HttpServlet {
    private static final long serialVersionUID = 1L;

    private final UserService userService = new UserService();
    private final EmployeeService employeeService;

    public LoginController() {
        try {
            this.employeeService = new EmployeeService(DbConfig.getConnection());
        } catch (SQLException e) {
            throw new RuntimeException("Failed to initialize EmployeeService", e);
        }
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        HttpSession session = request.getSession(false);
        if (session != null && session.getAttribute("user") != null) {
            redirectToDashboard((User) session.getAttribute("user"), request, response);
            return;
        }

        String contextPath = request.getContextPath();
        request.setAttribute("cssPath", contextPath + "/css/userlogin.css");
        request.setAttribute("imagepath", contextPath + "/image/login.jpg");

        request.getRequestDispatcher("/WEB-INF/page/login.jsp").forward(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        // Check if this is a staff login request
        if (request.getParameter("staffLogin") != null) {
            doPostStaff(request, response);
        } else {
            doPostUser(request, response);
        }
    }

    protected void doPostUser(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String email = request.getParameter("email").trim().toLowerCase();
        String password = request.getParameter("password");

        try {
            User user = userService.authenticateByEmailOnly(email, password);

            if (user != null) {
                HttpSession session = request.getSession();
                session.setAttribute("user", user);

                if ("on".equals(request.getParameter("remember"))) {
                    Cookie cookie = new Cookie("rememberedEmail", email);
                    cookie.setMaxAge(30 * 24 * 60 * 60);
                    cookie.setHttpOnly(true);
                    cookie.setPath(request.getContextPath());
                    response.addCookie(cookie);
                }

                session.setAttribute("plainPassword", password);
                redirectToDashboard(user, request, response);
            } else {
                request.setAttribute("error", "Invalid email or password.");
                forwardToLoginWithCss(request, response);
            }
        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("error", "Login error. Try again.");
            forwardToLoginWithCss(request, response);
        }
    }

    protected void doPostStaff(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String email = request.getParameter("email").trim().toLowerCase();
        String password = request.getParameter("password");

        try {
            Employee employee = employeeService.login(email, password);

            if (employee != null) {
                HttpSession session = request.getSession();
                session.setAttribute("employee", employee);

                if ("on".equals(request.getParameter("remember"))) {
                    Cookie cookie = new Cookie("rememberedEmail", email);
                    cookie.setMaxAge(30 * 24 * 60 * 60);
                    cookie.setHttpOnly(true);
                    cookie.setPath(request.getContextPath());
                    response.addCookie(cookie);
                }

                response.sendRedirect(request.getContextPath() + "staffDashboard");
            } else {
                request.setAttribute("error", "Invalid staff credentials.");
                forwardToLoginWithCss(request, response);
            }
        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("error", "Staff login error. Try again.");
            forwardToLoginWithCss(request, response);
        }
    }

    private void redirectToDashboard(User user, HttpServletRequest request, HttpServletResponse response)
            throws IOException, ServletException {
        String userType = user.getUserType().toLowerCase();

        switch (userType) {
            case "admin" -> response.sendRedirect("adminDashboard");
            case "staff" -> {
                HttpSession session = request.getSession();
                String plainPassword = (String) session.getAttribute("plainPassword");

                try {
                    Employee employee = employeeService.login(user.getEmail(), plainPassword);
                    if (employee != null) {
                        session.setAttribute("employee", employee);
                        session.removeAttribute("plainPassword");
                        response.sendRedirect("staffdashboard.jsp");
                    } else {
                        session.removeAttribute("plainPassword");
                        request.setAttribute("error", "Staff credentials invalid.");
                        forwardToLoginWithCss(request, response);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    session.removeAttribute("plainPassword");
                    request.setAttribute("error", "Error loading staff dashboard.");
                    forwardToLoginWithCss(request, response);
                }
            }
            default -> response.sendRedirect("passengerDashboard");
        }
    }

    private void forwardToLoginWithCss(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String contextPath = request.getContextPath();
        request.setAttribute("cssPath", contextPath + "/css/userlogin.css");
        request.setAttribute("imagepath", contextPath + "/image/login.jpg");
        request.getRequestDispatcher("/WEB-INF/page/login.jsp").forward(request, response);
    }
}