package com.airline.service;

import com.airline.config.DbConfig;
import com.airline.model.User;
import com.airline.util.PasswordUtil;

import java.security.NoSuchAlgorithmException;
import java.sql.*;
import java.util.logging.Logger;

public class RegisterService {
    private static final Logger logger = Logger.getLogger(RegisterService.class.getName());

    public boolean registerUser(User user) throws SQLException, NoSuchAlgorithmException {
        if (emailExists(user.getEmail())) {
            logger.warning("Registration attempt with existing email: " + user.getEmail());
            throw new SQLException("Email already registered");
        }

        String sql = "INSERT INTO users (FullName, Email, Phone, Password, userType, Active) " +
                     "VALUES (?, ?, ?, ?, ?, ?)";

        try (Connection conn = DbConfig.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {

            String hashedPassword = PasswordUtil.hashPassword(user.getPassword());

            stmt.setString(1, user.getFullName());
            stmt.setString(2, user.getEmail());
            stmt.setString(3, user.getPhone());
            stmt.setString(4, hashedPassword);
            stmt.setString(5, user.getUserType());
            stmt.setBoolean(6, user.isActive());

            int affectedRows = stmt.executeUpdate();

            if (affectedRows > 0) {
                try (ResultSet generatedKeys = stmt.getGeneratedKeys()) {
                    if (generatedKeys.next()) {
                        user.setId(generatedKeys.getInt(1));
                        logger.info("User registered successfully: ID=" + user.getId());
                        return true;
                    }
                }
            }

            logger.warning("Registration failed - no rows affected.");
            return false;

        } catch (SQLException e) {
            logger.severe("SQL error during registration: " + e.getMessage());
            throw e;
        }
    }

    private boolean emailExists(String email) throws SQLException {
        String sql = "SELECT 1 FROM users WHERE Email = ?";

        try (Connection conn = DbConfig.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setString(1, email);
            try (ResultSet rs = stmt.executeQuery()) {
                return rs.next();
            }

        } catch (SQLException e) {
            logger.severe("SQL error checking email existence: " + e.getMessage());
            throw e;
        }
    }

	public boolean register(User user) {
		// TODO Auto-generated method stub
		return false;
	}
}
