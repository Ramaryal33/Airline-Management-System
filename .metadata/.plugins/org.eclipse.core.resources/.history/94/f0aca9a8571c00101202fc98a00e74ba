package com.airline.service;

import com.airline.config.DbConfig;
import com.airline.model.User;
import com.airline.util.PasswordUtil;
import java.sql.*;
import java.util.logging.Logger;

public class UserService {
    private static final Logger logger = Logger.getLogger(UserService.class.getName());

    public boolean registerUser(User user) {
        String sql = "INSERT INTO users (FullName, Email, Phone, Password, userType, Active) VALUES (?, ?, ?, ?, ?, ?)";
        
        try (Connection conn = DbConfig.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) {
            
            // Hash the password before storing
            String hashedPassword = PasswordUtil.hashPassword(user.getPassword());
            
            stmt.setString(1, user.getFullName());
            stmt.setString(2, user.getEmail());
            stmt.setString(3, user.getPhone());
            stmt.setString(4, hashedPassword);
            stmt.setString(5, user.getUserType());
            stmt.setBoolean(6, user.isActive());
            
            int affectedRows = stmt.executeUpdate();
            
            if (affectedRows > 0) {
                try (ResultSet rs = stmt.getGeneratedKeys()) {
                    if (rs.next()) {
                        user.setID(rs.getInt(1));
                        logger.info("User registered successfully with ID: " + user.getID());
                        return true;
                    }
                }
            }
            return false;
        } catch (SQLException e) {
            logger.severe("SQL Error during registration: " + e.getMessage());
            return false;
        } catch (NoSuchAlgorithmException e) {
            logger.severe("Password hashing error: " + e.getMessage());
            return false;
        }
    }

    // Add other methods (authenticate, emailExists) here...
}