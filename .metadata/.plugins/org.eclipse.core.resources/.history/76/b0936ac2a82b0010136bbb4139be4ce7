// PerformanceReviewService.java
package com.airline.staff.service;

import com.airline.config.DbConfig;
import com.airline.staff.model.PerformanceReview;

import java.sql.*;
import java.util.*;
import java.util.stream.Collectors;

public class PerformanceReviewService {

    public void addReview(PerformanceReview review) {
        String sql = "INSERT INTO performance_review " +
                     "(staff_id, rating, performance_score, improvement_score, review_period, review_type, review_date, notes) " +
                     "VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        try (Connection conn = DbConfig.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, review.getStaffId());
            stmt.setString(2, review.getRating());
            stmt.setDouble(3, review.getPerformanceScore());
            stmt.setDouble(4, review.getImprovementScore());
            stmt.setString(5, review.getReviewPeriod());
            stmt.setString(6, review.getReviewType());
            stmt.setDate(7, review.getReviewDate());
            stmt.setString(8, review.getNotes());

            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void updateReview(PerformanceReview review) {
        String sql = "UPDATE performance_review SET staff_id=?, rating=?, performance_score=?, improvement_score=?, " +
                     "review_period=?, review_type=?, review_date=?, notes=? WHERE review_id=?";
        try (Connection conn = DbConfig.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, review.getStaffId());
            stmt.setString(2, review.getRating());
            stmt.setDouble(3, review.getPerformanceScore());
            stmt.setDouble(4, review.getImprovementScore());
            stmt.setString(5, review.getReviewPeriod());
            stmt.setString(6, review.getReviewType());
            stmt.setDate(7, review.getReviewDate());
            stmt.setString(8, review.getNotes());
            stmt.setInt(9, review.getReviewId());

            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void deleteReview(int id) {
        String sql = "DELETE FROM performance_review WHERE review_id = ?";
        try (Connection conn = DbConfig.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, id);
            stmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public PerformanceReview getReviewById(int id) {
        String sql = "SELECT * FROM performance_review WHERE review_id = ?";
        try (Connection conn = DbConfig.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setInt(1, id);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return mapPerformanceReview(rs);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return null;
    }

    public List<PerformanceReview> getAllReviews() {
        List<PerformanceReview> list = new ArrayList<>();
        String sql = "SELECT * FROM performance_review ORDER BY review_date DESC";

        try (Connection conn = DbConfig.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            while (rs.next()) {
                list.add(mapPerformanceReview(rs));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return list;
    }

    private PerformanceReview mapPerformanceReview(ResultSet rs) throws SQLException {
        PerformanceReview pr = new PerformanceReview();
        pr.setReviewId(rs.getInt("review_id"));
        pr.setStaffId(rs.getInt("staff_id"));
        pr.setRating(rs.getString("rating"));
        pr.setPerformanceScore(rs.getDouble("performance_score"));
        pr.setImprovementScore(rs.getDouble("improvement_score"));
        pr.setReviewPeriod(rs.getString("review_period"));
        pr.setReviewType(rs.getString("review_type"));
        pr.setReviewDate(rs.getDate("review_date"));
        pr.setNotes(rs.getString("notes"));
        return pr;
    }
}
