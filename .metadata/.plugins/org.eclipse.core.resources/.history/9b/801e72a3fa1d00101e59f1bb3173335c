package com.airline.util;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;
import java.util.Arrays;
import java.util.Base64;

public class PasswordUtil {
    private static final String HASH_ALGORITHM = "SHA-256";
    private static final int SALT_LENGTH = 16;
    private static final int ITERATIONS = 10000;

    public static String hashPassword(String password) throws NoSuchAlgorithmException {
        SecureRandom random = new SecureRandom();
        byte[] salt = new byte[SALT_LENGTH];
        random.nextBytes(salt);

        byte[] hash = hashWithSalt(password, salt, ITERATIONS);

        // Combine salt + hash for storage
        byte[] combined = new byte[SALT_LENGTH + hash.length];
        System.arraycopy(salt, 0, combined, 0, SALT_LENGTH);
        System.arraycopy(hash, 0, combined, SALT_LENGTH, hash.length);

        return Base64.getEncoder().encodeToString(combined);
    }

    public static boolean checkPassword(String ainputPassword, String storedPassword) 
            throws NoSuchAlgorithmException {
        try {
            byte[] combined = Base64.getDecoder().decode(storedPassword);
            if (combined.length < SALT_LENGTH) {
                return false;
            }

            byte[] salt = Arrays.copyOfRange(combined, 0, SALT_LENGTH);
            byte[] storedHash = Arrays.copyOfRange(combined, SALT_LENGTH, combined.length);

            byte[] inputHash = hashWithSalt(hashPassword(null), salt, ITERATIONS);

            return MessageDigest.isEqual(inputHash, storedHash);
        } catch (Exception e) {
            return false;
        }
    }

    private static byte[] hashWithSalt(String password, byte[] salt, int iterations) 
            throws NoSuchAlgorithmException {
        MessageDigest md = MessageDigest.getInstance(HASH_ALGORITHM);
        md.update(salt);
        byte[] hash = md.digest(password.getBytes());

        // Additional iterations for better security
        for (int i = 1; i < iterations; i++) {
            md.reset();
            hash = md.digest(hash);
        }
        return hash;
    }

    // For testing
    public static void main(String[] args) throws NoSuchAlgorithmException {
        String password = "test123";
        String hashed = hashPassword(password);
        System.out.println("Hashed password: " + hashed);
        System.out.println("Verify correct: " + checkPassword(password, hashed));
        System.out.println("Verify wrong: " + checkPassword("wrong", hashed));
    }
}