package com.airline.service;

import com.airline.config.DbConfig;
import com.airline.model.User;
import com.airline.util.PasswordUtil;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class UserService {
    private static final Logger logger = Logger.getLogger(UserService.class.getName());

    public User authenticate(String email, String password) throws SQLException {
        String sql = "SELECT * FROM users WHERE Email = ? AND Active = 1";
        
        try (Connection conn = DbConfig.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            
            stmt.setString(1, email);
            
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    String storedPassword = rs.getString("Password");
                    if (PasswordUtil.checkPassword(password, storedPassword)) {
                        logger.log(Level.INFO, "Authentication successful for: {0}", email);
                        return mapUserFromResultSet(rs);
                    }
                    logger.log(Level.WARNING, "Password mismatch for: {0}", email);
                } else {
                    logger.log(Level.WARNING, "User not found or inactive: {0}", email);
                }
                return null;
            }
        } catch (Exception e) {
            logger.log(Level.SEVERE, "Authentication error", e);
            throw new SQLException("Authentication failed", e);
        }
    }

    private User mapUserFromResultSet(ResultSet rs) throws SQLException {
        User user = new User();
        user.setId(rs.getInt("ID"));
        user.setFullName(rs.getString("FullName"));
        user.setEmail(rs.getString("Email"));
        user.setPhone(rs.getString("Phone"));
        user.setPassword(rs.getString("Password"));
        user.setUserType(rs.getString("userType"));
        user.setActive(rs.getBoolean("Active"));
        return user;
    }
}