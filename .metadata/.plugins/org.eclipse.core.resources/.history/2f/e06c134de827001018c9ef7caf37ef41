package com.airline.controller;

import com.airline.config.DbConfig;
import com.airline.staff.service.EmployeeService;
import com.airline.staff.model.Employee;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.annotation.*;

import java.io.IOException;
import java.sql.SQLException;

@WebServlet("/login")
public class LoginController extends HttpServlet {
    private static final long serialVersionUID = 1L;

    private final EmployeeService employeeService;

    // Constructor for initializing employeeService
    public LoginController() {
        try {
            this.employeeService = new EmployeeService(DbConfig.getConnection());
        } catch (SQLException e) {
            throw new RuntimeException("Failed to initialize EmployeeService", e);
        }
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        HttpSession session = request.getSession(false);
        if (session != null && session.getAttribute("employee") != null) {
            // If already logged in, redirect to the staff dashboard
            response.sendRedirect("staffDashboard");
            return;
        }

        String contextPath = request.getContextPath();
        request.setAttribute("cssPath", contextPath + "/css/userlogin.css");
        request.setAttribute("imagepath", contextPath + "/image/login.jpg");

        request.getRequestDispatcher("/WEB-INF/page/login.jsp").forward(request, response);
    }

    @Override
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        String email = request.getParameter("email").trim().toLowerCase();
        String password = request.getParameter("password");

        try {
            // Authenticate employee using email and password
            Employee employee = employeeService.login(email, password);

            if (employee != null) {
                HttpSession session = request.getSession();
                session.setAttribute("employee", employee);  // Set employee in session

                // Remember me cookie
                if ("on".equals(request.getParameter("remember"))) {
                    Cookie cookie = new Cookie("rememberedEmail", email);
                    cookie.setMaxAge(30 * 24 * 60 * 60);  // 30 days
                    cookie.setHttpOnly(true);
                    cookie.setPath(request.getContextPath());
                    response.addCookie(cookie);
                }

                // âœ… Redirect to staff dashboard
                response.sendRedirect(request.getContextPath() + "/staffDashboard");
            } else {
                request.setAttribute("error", "Invalid email or password.");
                forwardToLoginWithCss(request, response);
            }

        } catch (Exception e) {
            e.printStackTrace();
            request.setAttribute("error", "Login error. Try again.");
            forwardToLoginWithCss(request, response);
        }
    }


    // Forward with login CSS/image
    private void forwardToLoginWithCss(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String contextPath = request.getContextPath();
        request.setAttribute("cssPath", contextPath + "/css/userlogin.css");
        request.setAttribute("imagepath", contextPath + "/image/login.jpg");
        request.getRequestDispatcher("/WEB-INF/page/login.jsp").forward(request, response);
    }
}
