package com.airline.controller;

import com.airline.model.User;
import com.airline.service.UserService;
import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.annotation.*;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

@WebServlet("/login")
public class LoginController extends HttpServlet {
    private static final long serialVersionUID = 1L;
    private final UserService userService = new UserService();
    private static final Logger logger = Logger.getLogger(LoginController.class.getName());

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            HttpSession session = request.getSession(false);
            if (session != null && session.getAttribute("user") != null) {
                redirectToDashboard((User) session.getAttribute("user"), response);
                return;
            }

            setLoginPageAttributes(request);
            request.getRequestDispatcher("/WEB-INF/page/login.jsp").forward(request, response);
        } catch (Exception e) {
            logger.log(Level.SEVERE, "Error in login GET request", e);
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String email = request.getParameter("email").trim().toLowerCase();
        String password = request.getParameter("password");

        try {
            User user = userService.authenticate(email, password);

            if (user != null) {
                logger.info("Successful login for user: " + email);
                handleSuccessfulLogin(request, response, email, user);
            } else {
                logger.warning("Failed login attempt for email: " + email);
                handleFailedLogin(request, response);
            }
        } catch (Exception e) {
            logger.log(Level.SEVERE, "Error during authentication for email: " + email, e);
            handleFailedLogin(request, response);
        }
    }

    // ... rest of the methods remain unchanged ...
}

    private void handleSuccessfulLogin(HttpServletRequest request, HttpServletResponse response, 
                                     String email, User user) throws IOException {
        HttpSession session = request.getSession();
        session.setAttribute("user", user);

        if ("on".equals(request.getParameter("remember"))) {
            createRememberMeCookie(request, response, email);
        }

        redirectToDashboard(user, response);
    }

    private void createRememberMeCookie(HttpServletRequest request, HttpServletResponse response, 
                                       String email) {
        Cookie cookie = new Cookie("rememberedEmail", email);
        cookie.setMaxAge(30 * 24 * 60 * 60); // 30 days
        cookie.setHttpOnly(true);
        cookie.setPath(request.getContextPath());
        response.addCookie(cookie);
    }

    private void handleFailedLogin(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        request.setAttribute("error", "Invalid email or password.");
        setLoginPageAttributes(request);
        request.getRequestDispatcher("/WEB-INF/page/login.jsp").forward(request, response);
    }

    private void redirectToDashboard(User user, HttpServletResponse response) throws IOException {
        String dashboardPath = switch (user.getUserType().toLowerCase()) {
            case "admin" -> "admin/dashboard";
            case "staff" -> "staff/dashboard";
            default -> "passenger/dashboard";
        };
        response.sendRedirect(dashboardPath);
    }

    private void setLoginPageAttributes(HttpServletRequest request) {
        String contextPath = request.getContextPath();
        request.setAttribute("cssPath", contextPath + "/css/userlogin.css");
        request.setAttribute("imagepath", contextPath + "/image/login.jpg");
    }
}