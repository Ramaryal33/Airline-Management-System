/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.28
 * Generated at: 2025-04-19 04:28:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.page;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class staffDashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Staff Dashboard</title>\r\n");
      out.write("   <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/staff.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"dashboard-container\">\r\n");
      out.write("        <!-- Employee Experience Section -->\r\n");
      out.write("        <div class=\"card\">\r\n");
      out.write("        <h2>Welcome, ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.fullName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("!</h2> \r\n");
      out.write("            <h3>Employee Experience Dashboard</h3>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"metric\">\r\n");
      out.write("                <h3>eNPS trend</h3>\r\n");
      out.write("                <!-- Chart would go here in a real implementation -->\r\n");
      out.write("                <div style=\"height: 150px; background-color: #f8f9fa; display: flex; align-items: flex-end;\">\r\n");
      out.write("                    <div style=\"width: 50%; height: 70%; background-color: #3498db;\"></div>\r\n");
      out.write("                    <div style=\"width: 50%; height: 100%; background-color: #2ecc71;\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div style=\"display: flex; justify-content: space-between;\">\r\n");
      out.write("                    <span>2023</span>\r\n");
      out.write("                    <span>2024</span>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"metric\">\r\n");
      out.write("                <h3>2024 eNPS</h3>\r\n");
      out.write("                <div class=\"metric-value\">48.81</div>\r\n");
      out.write("                <div class=\"progress-bar\">\r\n");
      out.write("                    <div class=\"progress\" style=\"width: 48.81%\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <p>48.81% Promoters (9-10)</p>\r\n");
      out.write("                <p>27.38% Passive (7-8)</p>\r\n");
      out.write("                <p>26.81% Detractors (0-6)</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"satisfaction-item\">\r\n");
      out.write("                <div class=\"satisfaction-question\">How satisfied are you with career opportunities at Infinite?</div>\r\n");
      out.write("                <div class=\"satisfaction-options\">\r\n");
      out.write("                    <div class=\"satisfaction-option\">Very<br>satisfied</div>\r\n");
      out.write("                    <div class=\"satisfaction-option\">Satisfied</div>\r\n");
      out.write("                    <div class=\"satisfaction-option\">Neutral</div>\r\n");
      out.write("                    <div class=\"satisfaction-option\">Dissatisfied</div>\r\n");
      out.write("                    <div class=\"satisfaction-option\">Very<br>dissatisfied</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- Chart would go here -->\r\n");
      out.write("                <div style=\"height: 100px; background-color: #f8f9fa; margin-top: 10px;\"></div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Employee Profile Section -->\r\n");
      out.write("        <div class=\"card\">\r\n");
      out.write("            <div class=\"profile-header\">\r\n");
      out.write("                <h1>AHMED ROBOBY</h1>\r\n");
      out.write("            </div>\r\n");
      out.write("            <p>Bureau Place, 14477</p>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"metric\">\r\n");
      out.write("                <div class=\"metric-title\">HBB Revenue Status</div>\r\n");
      out.write("                <div class=\"metric-value\">347</div>\r\n");
      out.write("                <div>Current: 89% | Target: 42% | Launch: 49%</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"metric\">\r\n");
      out.write("                <div class=\"metric-title\">Credit Revenue Status</div>\r\n");
      out.write("                <div class=\"metric-value\">85</div>\r\n");
      out.write("                <div>Current: 90% | Target: 80% | Launch: 98%</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"metric\">\r\n");
      out.write("                <div class=\"metric-title\">Credit Agreement</div>\r\n");
      out.write("                <div class=\"metric-value\">470</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <h3>NIBs</h3>\r\n");
      out.write("            <div class=\"nibs-container\">\r\n");
      out.write("                <div class=\"nibs-item\">\r\n");
      out.write("                    <div>Credit Facility</div>\r\n");
      out.write("                    <div class=\"nibs-percentage\">80%</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"nibs-item\">\r\n");
      out.write("                    <div>Revenue</div>\r\n");
      out.write("                    <div class=\"nibs-percentage\">95%</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"nibs-item\">\r\n");
      out.write("                    <div>Treasury</div>\r\n");
      out.write("                    <div class=\"nibs-percentage\">78%</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"nibs-item\">\r\n");
      out.write("                    <div>Non-MM</div>\r\n");
      out.write("                    <div class=\"nibs-percentage\">0%</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <h3>Visit site</h3>\r\n");
      out.write("            <div style=\"display: flex; gap: 20px;\">\r\n");
      out.write("                <div>10g</div>\r\n");
      out.write("                <div>20/1.30</div>\r\n");
      out.write("                <div>1,400</div>\r\n");
      out.write("                <div>Ct</div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
